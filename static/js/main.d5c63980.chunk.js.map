{"version":3,"sources":["App.js","index.js"],"names":["DraggableBox","data","children","rest","getProps","useDrag","onDragStart","_data","onDragEnd","className","App","useState","key","value","setData","console","log","onRenderCallback","useCallback","id","phase","handleClick","map","i","onClick","onRender","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wNAKA,SAASA,EAAT,GAAoD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAaC,EAAQ,iBAC3CC,EAAWC,YAAQ,CACvBC,YAAa,SAACC,KAGdC,UAAW,SAACD,OAKd,OACE,wDAAIE,UAAU,gBAAmBL,EAASH,IAAWE,GAArD,aACGD,KAKQ,SAASQ,IACtB,MAAwBC,mBAAS,CAC/B,CAAEC,IAAK,EAAGC,MAAO,GACjB,CAAED,IAAK,EAAGC,MAAO,GACjB,CAAED,IAAK,EAAGC,MAAO,KAHnB,mBAAOZ,EAAP,KAAaa,EAAb,KAMAC,QAAQC,IAAI,UAAWf,EAAK,IAE5B,IAAMgB,EAAmBC,uBAAY,SAACC,EAAIC,GACxCL,QAAQC,IAAI,mBACZD,QAAQC,IAAI,QAASG,GAErBJ,QAAQC,IAAI,WAAYI,KACvB,IAEGC,EAAcH,uBAAY,WAC9BJ,EACEb,EAAKqB,KAAI,SAACC,GAAD,mBAAC,eACLA,GADI,IAEPV,MAAOU,EAAEV,MAAQ,UAGpB,CAACZ,IAEJ,OACE,sBAAKQ,UAAU,MAAf,UACE,wBAAQe,QAASH,EAAjB,8BACCpB,EAAKqB,KAAI,SAACC,GAAD,OACR,cAACvB,EAAD,CAA0BC,KAAMsB,EAAhC,SACE,cAAC,WAAD,CAAUJ,GAAG,iBAAiBM,SAAUR,EAAxC,SAEE,+CAAQM,EAAEV,YAHKU,EAAEX,WC9C7B,IAAMc,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACpB,EAAD,MAEFgB,K","file":"static/js/main.d5c63980.chunk.js","sourcesContent":["import { Profiler, useCallback, useState } from \"react\";\nimport { useDrag } from \"ahooks\";\n\nimport \"./styles.css\";\n\nfunction DraggableBox({ data, children, ...rest }) {\n  const getProps = useDrag({\n    onDragStart: (_data) => {\n      // somecode\n    },\n    onDragEnd: (_data) => {\n      // somecode\n    }\n  });\n\n  return (\n    <li className=\"draggable-li\" {...getProps(data)} {...rest}>\n      {children}\n    </li>\n  );\n}\n\nexport default function App() {\n  const [data, setData] = useState([\n    { key: 1, value: 1 },\n    { key: 2, value: 2 },\n    { key: 3, value: 3 }\n  ]);\n\n  console.log(\"data===\", data[0]);\n\n  const onRenderCallback = useCallback((id, phase) => {\n    console.log(\"---------------\");\n    console.log(\"id===\", id);\n    // \"mount\" （如果组件树刚加载） 或者 \"update\" （如果它重渲染了）之一\n    console.log(\"phase===\", phase);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    setData(\n      data.map((i) => ({\n        ...i,\n        value: i.value + 1\n      }))\n    );\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <button onClick={handleClick}>修改data</button>\n      {data.map((i) => (\n        <DraggableBox key={i.key} data={i}>\n          <Profiler id=\"DraggableChild\" onRender={onRenderCallback}>\n            {/** children将被重新mount! */}\n            <div>拖动{i.value}</div>\n          </Profiler>\n        </DraggableBox>\n      ))}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}